#include <iostream>
#include <omp.h>

int main() {
    int a[100];
    int sum1 = 0;
    int sum2 = 0;

    // Инициализация массива a
    for (int i = 0; i < 100; i++) {
        a[i] = i + 1;
    }

    // Вычисление среднего арифметического без reduction
    #pragma omp parallel for num_threads(4)
    for (int i = 0; i < 100; i++) {
        sum1 += a[i];
    }
    float average1 = static_cast<float>(sum1) / 100;

    // Вычисление среднего арифметического с reduction
    #pragma omp parallel for reduction(+:sum2) num_threads(4)
    for (int i = 0; i < 100; i++) {
        sum2 += a[i];
    }
    float average2 = static_cast<float>(sum2) / 100;

    std::cout << "Average without reduction: " << average1 << std::endl;
    std::cout << "Average with reduction: " << average2 << std::endl;

    return 0;
}
